{"version":3,"sources":["context/alertas/alertaContext.js","context/autenticacion/authContext.js","components/auth/Login.js","components/auth/NuevaCuenta.js","context/proyectos/proyectoContext.js","components/proyectos/NuevoProyecto.js","context/tareas/tareaContext.js","components/proyectos/Proyecto.js","components/proyectos/ListadoProyectos.js","components/layout/Sidebar.js","components/layout/Barra.js","components/tareas/FormTarea.js","components/tareas/Tarea.js","components/tareas/ListadoTareas.js","components/proyectos/Proyectos.js","types/index.js","context/proyectos/proyectoReducer.js","config/axios.js","context/proyectos/proyectoState.js","context/tareas/tareaReducer.js","context/tareas/tareaState.js","context/alertas/alertaReducer.js","context/alertas/alertaState.js","context/autenticacion/authReducer.js","config/tokenAuth.js","context/autenticacion/authState.js","components/rutas/RutaPrivada.js","App.js","reportWebVitals.js","index.js"],"names":["alertaConext","createContext","authConext","Login","props","useContext","AlertaConext","alerta","mostrarAlerta","authContext","AuthContext","mensaje","autenticado","iniciarSession","useState","email","password","usuario","guardarUsuario","useEffect","history","push","msg","categoria","handleChange","e","target","name","value","className","onSubmit","preventDefault","trim","forhtml","type","id","placeholder","onChange","autoComplete","to","NuevaCuenta","registrarUsuario","nombre","confirmar","length","proyectoContext","NuevoProyecto","proyectosContext","formulario","errorformulario","mostrarFormulario","agregarProyecto","mostrarError","proyecto","guardarProyecto","onClick","console","log","TareaContext","Proyecto","proyectoActual","obtenerTareas","tareaContext","_id","ListadoProyectos","alertaContext","AlertaContext","proyectos","obtenerProyectos","map","Sidebar","Barra","usuarioAutenticado","cerrarSesion","FormTarea","tareasContext","tareaseleccionada","errortarea","agregarTarea","validarTarea","actualizarTarea","limpiarTarea","guardarTarea","tarea","Tarea","eliminarTarea","guardarTareaActual","cambiaEstado","estado","seleccionarTarea","ListadoTareas","eliminarProyecto","tareasproyecto","Proyectos","FORMULARIO_PROYECTO","OBTENER_PROYECTOS","AGREGAR_PROYECTO","VALIDAR_FORMULARIO","PROYECTO_ACTUAL","ELIMINAR_PROYECTO","PROYECTO_ERROR","TAREAS_PROYECTO","AGREGAR_TAREA","VALIDAR_TAREA","ELIMINAR_TAREA","TAREA_ACTUAL","ACTUALIZAR_TAREA","LIMPIAR_TAREA","MOSTRAR_ALERTA","OCULTAR_ALERTA","REGISTRO_EXITOSO","REGISTRO_ERROR","OBTENER_USUARIO","LOGIN_EXITOSO","LOGIN_ERROR","CERRAR_SESION","state","action","payload","filter","clienteAxios","axios","create","baseURL","process","ProyectoState","useReducer","proyectoReducer","dispatch","a","get","resultado","data","post","proyectoId","delete","Provider","children","TareaState","TareaReducer","params","tareas","put","AlertaState","alertaReducer","setTimeout","info","localStorage","setItem","token","cargando","removeItem","tokenAuth","defaults","headers","common","AuthState","initialState","getItem","authReducer","datos","respuesta","response","RutaPrivada","Component","component","render","App","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.72ca0a79.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst alertaConext = createContext();\n\nexport default alertaConext;","import { createContext } from 'react';\n\nconst authConext = createContext();\n\nexport default authConext;","import React, { useContext, useState, useEffect } from 'react';\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AlertaConext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Login = (props) => {\n\n    // extraer los valores del context \n    const alertaConext = useContext(AlertaConext);\n    const { alerta, mostrarAlerta } = alertaConext;\n    // context de auth\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, iniciarSession } = authContext;\n\n    const [usuario, guardarUsuario] = useState({\n        email: '',\n        password: ''\n    });\n\n    // en caso de que el usuario se haya autenticado \n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/proyectos');\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n    }, [mensaje, autenticado, props.history]);\n\n    const { email, password } = usuario;\n\n    // func que modifica valores en el useState\n    const handleChange = (e) => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        });\n    }\n    // func cuando el usuario da click en iniciar sesion\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Validaciones\n        if (email.trim() === '' || password.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-err');\n            return;\n        }\n        // enviar datos\n        iniciarSession({ email, password})\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>):null}\n            <div className=\"contenedor-form sombra-dark\">\n                <h1>Iniciar sesión</h1>\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label forhtml=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu email\"\n                            onChange={handleChange}\n                            value={email}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label forhtml=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu password\"\n                            autoComplete=\"off\"\n                            onChange={handleChange}\n                            value={password}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Iniciar sesión\"\n                        />\n                    </div>\n                </form>\n                <Link to={'/nueva-cuenta'} className=\"enlace-cuenta\">\n                    Obtener cuenta\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nLogin.propTypes = {\n\n}\n\nexport default Login\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport AlertaConext from '../../context/alertas/alertaContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst NuevaCuenta = props => {\n\n    // extraer los valores del context \n    const alertaConext = useContext(AlertaConext);\n    const { alerta, mostrarAlerta } = alertaConext;\n    // context de auth\n    const authContext = useContext(AuthContext);\n    const { mensaje, autenticado, registrarUsuario } = authContext;\n\n    // en caso de que el usuario se haya autenticado \n    useEffect(() => {\n        if (autenticado) {\n            props.history.push('/proyectos');\n        }\n\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n    }, [mensaje, autenticado, props.history]);\n\n    const [usuario, guardarUsuario] = useState({\n        nombre : '',\n        email: '',\n        password: '',\n        confirmar: ''\n    });\n\n    const { nombre, email, password, confirmar } = usuario;\n\n    // func que modifica valores en el useState\n    const handleChange = (e) => {\n        guardarUsuario({\n            ...usuario,\n            [e.target.name]: e.target.value\n        });\n    }\n    // func cuando el usuario da click en iniciar sesion\n    const handleSubmit = (e) => {\n        e.preventDefault();\n        // Validaciones no vacias\n        if (nombre.trim() === '' || email.trim() === '' || password.trim() === '' || confirmar.trim() === '') {\n            mostrarAlerta('Todos los campos son obligatorios', 'alerta-err');\n            return;\n        }\n        // password minimo 8 caracteres\n        if (password.length < 8) {\n            mostrarAlerta('La contraseña debe ser minimo de 8 caracteres', 'alerta-err');\n            return;\n        }\n\n        if (password !== confirmar) {\n            mostrarAlerta('Las contraseñas debe ser iguales', 'alerta-err');\n            return;\n        }\n        // pasar lo al action\n        registrarUsuario({\n            nombre,\n            email, \n            password\n        })\n    }\n\n    return (\n        <div className=\"form-usuario\">\n            \n            <div className=\"contenedor-form sombra-dark\">\n                {alerta ? (<div className={`alerta ${alerta.categoria}`}>{alerta.msg}</div>):null}\n                <h1>Obtener una cuenta</h1>\n                <form\n                    onSubmit={handleSubmit}\n                >\n                    <div className=\"campo-form\">\n                        <label forhtml=\"nombre\">Nombre</label>\n                        <input\n                            type=\"text\"\n                            id=\"nombre\"\n                            name=\"nombre\"\n                            placeholder=\"Tu nombre\"\n                            onChange={handleChange}\n                            value={nombre}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label forhtml=\"email\">Email</label>\n                        <input\n                            type=\"email\"\n                            id=\"email\"\n                            name=\"email\"\n                            placeholder=\"Tu email\"\n                            onChange={handleChange}\n                            value={email}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label forhtml=\"password\">Password</label>\n                        <input\n                            type=\"password\"\n                            id=\"password\"\n                            name=\"password\"\n                            placeholder=\"Tu password\"\n                            autoComplete=\"off\"\n                            onChange={handleChange}\n                            value={password}\n                        />\n                    </div>\n                    <div className=\"campo-form\">\n                        <label forhtml=\"confirmar\">Confirmar password</label>\n                        <input\n                            type=\"password\"\n                            id=\"confirmar\"\n                            name=\"confirmar\"\n                            placeholder=\"Repite tu password\"\n                            autoComplete=\"off\"\n                            onChange={handleChange}\n                            value={confirmar}\n                        />\n                    </div>\n\n                    <div className=\"campo-form\">\n                        <input\n                            type=\"submit\"\n                            className=\"btn btn-primario btn-block\"\n                            value=\"Registrar me\"\n                        />\n                    </div>\n                </form>\n                <Link to={'/'} className=\"enlace-cuenta\">\n                    Iniciar sesión\n                </Link>\n            </div>\n        </div>\n    )\n}\n\nNuevaCuenta.propTypes = {\n\n}\n\nexport default NuevaCuenta;\n","import { createContext } from 'react';\n\nconst proyectoContext = createContext();\n\nexport default proyectoContext;","import React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\n\nconst NuevoProyecto = () => {\n\n    // obtener el state del formulario\n    const proyectosContext = useContext(proyectoContext);\n    const { formulario, errorformulario, mostrarFormulario, agregarProyecto, mostrarError } = proyectosContext; // extracion de datos\n\n    const [proyecto, guardarProyecto] = useState({\n        nombre: ''\n    });\n    const [error, guardarError] = useState(false);\n\n    const { nombre } = proyecto;\n\n    const handleChangeProyecto = (e) => {\n        guardarProyecto({\n            ...proyecto,\n            [e.target.name]: e.target.value\n        })\n    };\n\n    const handleOnSubmitProyecto = (e) => {\n        e.preventDefault();\n        console.log('envio de datos');\n\n        // validar campos\n        if (nombre.trim() === '') {\n            mostrarError();\n            return;\n        }\n        \n        agregarProyecto(proyecto);\n        guardarProyecto({\n            nombre:''\n        });\n\n    }\n\n    return (\n        <>\n            <button\n                type=\"button\"\n                className=\"btn btn-block btn-primario\"\n                onClick={ () => mostrarFormulario() }\n            >\n                Nuevo proyecto\n            </button>\n            {formulario ? (\n                <form\n                    className=\"formulario-nuevo-proyecto\"\n                    onSubmit={handleOnSubmitProyecto}\n                >\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"Nombre proyecto\"\n                        name=\"nombre\"\n                        onChange={handleChangeProyecto}\n                        value={ nombre }\n                    />\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-primario btn-block\"\n                        value=\"Agregar proyecto\"\n                    />\n                </form>)\n                :\n                null\n            }\n\n            {\n                errorformulario && <p className=\"mensaje error\">El nombre es obligatorio</p>\n            }\n        </>\n    )\n}\n\nNuevoProyecto.propTypes = {\n\n}\n\nexport default NuevoProyecto\n","import { createContext } from 'react';\n\nconst TareaContext = createContext();\n\nexport default TareaContext;","import React, { useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Proyecto = ({ proyecto }) => {\n    \n    // obtener el state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyectoActual } = proyectosContext; // extracion de datos\n\n    // obtener la funcion del context de tarea\n    const tareasContext = useContext(tareaContext);\n    const { obtenerTareas} = tareasContext;\n\n    // agregar una funcion de click\n    const seleccionarProyecto = (id) => {\n        proyectoActual(id); // para mostrar el proycto actual\n        obtenerTareas(id); // obtiene las tareas por id\n    }\n\n    return (\n        <li>\n            <button\n                type=\"button\"\n                className=\"btn btn-blank\"\n                onClick={ () => seleccionarProyecto(proyecto._id) }\n            >{proyecto.nombre}</button> \n        </li>\n    )\n}\n\nProyecto.propTypes = {\n\n}\n\nexport default Proyecto\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Proyecto from './Proyecto';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport AlertaContext from '../../context/alertas/alertaContext';\n\nconst ListadoProyectos = () => {\n\n    const alertaContext = useContext(AlertaContext);\n    const { alerta, mostrarAlerta } = alertaContext;\n\n    // extraer proyectos de state incial\n    const proyectosContext = useContext(proyectoContext);\n    const { mensaje, proyectos, obtenerProyectos } = proyectosContext; // extracion de datos\n\n    // obtener proyectos cuando carga el componente\n    useEffect(() => {\n        if (mensaje) {\n            mostrarAlerta(mensaje.msg, mensaje.categoria);\n        }\n\n        obtenerProyectos();\n\n    }, [mensaje]);\n\n    // revisar si proyectos tiene contenido\n    if (proyectos.length === 0) return <p>No hay proyectos, comienza creando uno</p>;\n\n    return (\n        <ul className=\"listado-proyectos\">\n            { alerta && (<div className={`alerta ${alerta.msg}`}>{alerta.msg}</div>)}\n            { proyectos.map(proyecto => (\n                <Proyecto\n                    key={proyecto._id}\n                    proyecto={proyecto} />\n            ))}\n        </ul>\n    )\n}\n\nListadoProyectos.propTypes = {\n\n}\n\nexport default ListadoProyectos\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport NuevoProyecto from '../proyectos/NuevoProyecto';\nimport ListadoProyectos from '../proyectos/ListadoProyectos';\n\nconst Sidebar = () => {\n    return (\n        <aside>\n            <h1>MERN <span>Task</span></h1>\n\n            <NuevoProyecto />\n\n            <div className=\"proyectos\">\n                <h2>Tus proyectos</h2>\n                <ListadoProyectos />\n            </div>\n        </aside>\n    )\n}\n\nSidebar.propTypes = {\n\n}\n\nexport default Sidebar\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Barra = () => {\n\n    // extraer la informacion autenticada\n    const authContext = useContext(AuthContext);\n    const { usuario, usuarioAutenticado, cerrarSesion } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n    }, []);\n\n    return (\n        <header className=\"app-header\">\n            {usuario && <p className=\"nombre-usuario\">Hola <span>{usuario.nombre}</span> </p> }\n            <nav className=\"nav-principal\">\n                <button\n                    className=\"btn btn-blank cerrar-sesion\"\n                    onClick={ () => cerrarSesion() }\n                >\n                    Cerrar sesión\n                </button>\n            </nav>\n        </header>\n    )\n}\n\nBarra.propTypes = {\n\n}\n\nexport default Barra\n","import React, {useContext, useState, useEffect} from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst FormTarea = () => {\n     // obtener el context de proyectos para las func y datos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext; \n    // obtener el context de tarea para func y datos\n    const tareasContext = useContext(tareaContext);\n        const { tareaseleccionada,  errortarea, agregarTarea, validarTarea, obtenerTareas, actualizarTarea, limpiarTarea } = tareasContext;\n\n    // detecta si hay una tarea seleccionada\n    useEffect(() => {\n        if (tareaseleccionada !== null) {\n            guardarTarea(tareaseleccionada);\n        } else {\n            guardarTarea({\n                nombre: ''\n            });\n        }\n    }, [tareaseleccionada]);\n\n    // generar useState\n    const [tarea, guardarTarea] = useState({\n        nombre: ''\n    });\n    const { nombre } = tarea;\n\n    // obtener los datos\n\n    if (!proyecto) return null;\n\n    const [proyectoActual] = proyecto;\n\n    // Leer los valores del formulario\n    const handleChange = e => {\n        guardarTarea({\n            ...tarea,\n            [e.target.name]: e.target.value\n        })\n    }\n\n    // agregar una nueva tarea\n    const onSubmit = (e) => {\n        e.preventDefault();\n\n        // validar\n        if(nombre.trim() === '' ) {\n            validarTarea();\n            return;\n        }\n\n        // Si es edición o si es nueva tarea\n        if(tareaseleccionada === null ) {\n            // agregar la nueva tarea al state de tareas\n            tarea.proyecto = proyectoActual._id;\n            agregarTarea(tarea);\n        } else {\n            // actualizar tarea existente\n            actualizarTarea(tarea);\n\n            // Elimina tareaseleccionada del state\n            limpiarTarea();\n        }\n        // Obtener y filtrar las tareas del proyecto actual\n        obtenerTareas(proyectoActual.id);\n\n        // reiniciar el form\n        guardarTarea({\n            nombre: ''\n        })\n    }\n\n    return (\n        <div className=\"formulario\">\n            \n            <form\n                onSubmit={onSubmit}\n            >\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"text\"\n                        className=\"input-text\"\n                        placeholder=\"tarea\"\n                        name=\"nombre\"\n                        value={nombre}\n                        onChange={handleChange}\n                    />\n                </div>\n                <div className=\"contenedor-input\">\n                    <input\n                        type=\"submit\"\n                        className=\"btn btn-principal btn-submit btn-block\"\n                        value={ tareaseleccionada ? 'Editar Tarea':'Agregar Tarea'}\n                    />\n                </div>\n            </form>\n            {errortarea && <p className=\"mensaje error\">El nombre de la tarea es obligatorio</p>}\n        </div>\n    )\n}\n\nFormTarea.propTypes = {\n\n}\n\nexport default FormTarea\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\n\nconst Tarea = ({ tarea }) => {\n\n\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto } = proyectosContext; \n\n    const tareasContext = useContext(tareaContext);\n    const { eliminarTarea, obtenerTareas, actualizarTarea, guardarTareaActual} = tareasContext;\n    \n    // extraer los datos\n    const [proyectoActual] = proyecto;\n\n    // funcion que se ejcuta cuando el usuario presiona el btn de eliminar tarea\n    const quitarTarea = id => {\n        eliminarTarea(id, proyectoActual._id);\n        obtenerTareas(proyectoActual.id);\n    }\n\n    // funcion que modifica el estado de la tarea\n    const cambiaEstado = tarea => {\n        if (tarea.estado) {\n            tarea.estado = false;\n        } else {\n            tarea.estado = true;\n        }\n        actualizarTarea(tarea);\n    }\n\n    // agregar tarea actual cuando se quiera editar\n    const seleccionarTarea = tarea => {\n        guardarTareaActual(tarea);\n    }\n\n    return (\n        <li className=\"tarea sombra\">\n            <p>\n                {tarea.nombre}\n            </p>\n            <div className=\"estado\">\n                {tarea.estado\n                    ?\n                        (\n                        <button\n                            type=\"button\"\n                            className=\"completo\"\n                            onClick={ () => cambiaEstado(tarea)}\n                            >Completo</button>\n                        )\n                    :\n                        (\n                        <button\n                            type=\"button\"\n                            className=\"incompleto\"\n                            onClick={ () => cambiaEstado(tarea)}\n                            >Incompleto</button>\n                        ) \n                }\n            </div>\n            <div className=\"acciones\">\n                <button\n                    type=\"button\"\n                    className=\"btn btn-primario\"\n                    onClick={() => seleccionarTarea(tarea)}\n                >Editar</button>\n                <button\n                    type=\"button\"\n                    className=\"btn btn-secundario\"\n                    onClick={ () => quitarTarea(tarea._id) }\n                >Eliminar</button>\n            </div>\n        </li>\n    )\n}\n\nTarea.propTypes = {\n\n}\n\nexport default Tarea\n","import React, {useContext} from 'react';\nimport PropTypes from 'prop-types';\nimport Tarea from './Tarea';\nimport proyectoContext from '../../context/proyectos/proyectoContext';\nimport tareaContext from '../../context/tareas/tareaContext';\nimport {CSSTransition, TransitionGroup} from 'react-transition-group';\n\nconst ListadoTareas = () => {\n\n     // obtener el state de proyectos\n    const proyectosContext = useContext(proyectoContext);\n    const { proyecto, eliminarProyecto } = proyectosContext; // extracion de datos\n\n    // obtener el context tarea\n    const tareasContext = useContext(tareaContext);\n    const { tareasproyecto } = tareasContext;\n\n    if (!proyecto) return <h2>No hay proyecto</h2>;\n\n    const [proyectoActual] = proyecto;\n\n    // eliminar proyecto\n    const onClickEliminar = () => {\n        eliminarProyecto(proyectoActual._id);\n    }\n    console.log(proyectoActual);\n\n    return (\n        <>\n            <h2>Proyecto: { proyectoActual.nombre }</h2>   \n            <ul className=\"listado-tareas\">\n                {tareasproyecto.length === 0 \n                    ? (<li className=\"tarea\"><p>No hay tareas</p></li>) \n                    :\n                    tareasproyecto.map(tarea => (\n                        <Tarea\n                            key={tarea._id}\n                            tarea={tarea} />\n                    ))\n                }\n            </ul>\n            <button\n                type=\"button\"\n                className=\"btn btn-eliminar\"\n                onClick={ onClickEliminar }\n                >Eliminar proyeto &times;</button>\n        </>\n    )\n}\n\nListadoTareas.propTypes = {\n\n}\n\nexport default ListadoTareas\n","import React, { useContext, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport Sidebar from '../layout/Sidebar';\nimport Barra from '../layout/Barra';\nimport FormTarea from '../tareas/FormTarea';\nimport ListadoTareas from '../tareas/ListadoTareas';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst Proyectos = () => {\n\n    // extraer la informacion autenticada\n    const authContext = useContext(AuthContext);\n    const { usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n    }, []);\n\n    return (\n        <div className=\"contenedor-app\">\n            <Sidebar/>\n            <div className=\"seccion-principal\">\n                <Barra/>\n                <main>\n                    <FormTarea />\n                    <div className=\"contenedor-tareas\">\n                        <ListadoTareas />\n                    </div>\n                </main>\n            </div>\n        </div>\n    )\n}\n\nProyectos.propTypes = {\n\n}\n\nexport default Proyectos\n","export const FORMULARIO_PROYECTO = 'FORMULARIO_PROYECTO';\nexport const OBTENER_PROYECTOS = 'OBTENER_PROYECTOS';\nexport const AGREGAR_PROYECTO = 'AGREGAR_PROYECTO';\nexport const VALIDAR_FORMULARIO = 'VALIDAR_FORMULARIO';\nexport const PROYECTO_ACTUAL = 'PROYECTO_ACTUAL';\nexport const ELIMINAR_PROYECTO = 'ELIMINAR_PROYECTO';\nexport const PROYECTO_ERROR = 'PROYECTO_ERROR';\n\nexport const TAREAS_PROYECTO = 'TAREAS_PROYECTO';\nexport const AGREGAR_TAREA = 'AGREGAR_TAREA';\nexport const VALIDAR_TAREA = 'VALIDAR_TAREA';\nexport const ELIMINAR_TAREA = 'ELIMINAR_TAREA';\nexport const ESTADO_TAREA = 'ESTADO_TAREA';\nexport const TAREA_ACTUAL = 'TAREA_ACTUAL';\nexport const ACTUALIZAR_TAREA = 'ACTUALIZAR_TAREA';\nexport const LIMPIAR_TAREA = 'LIMPIAR_TAREA';\n\nexport const MOSTRAR_ALERTA = 'MOSTRAR_ALERTA';\nexport const OCULTAR_ALERTA = 'OCULTAR_ALERTA';\n\nexport const REGISTRO_EXITOSO = 'REGISTRO_EXITOSO';\nexport const REGISTRO_ERROR = 'REGISTRO_ERROR';\nexport const OBTENER_USUARIO = 'OBTENER_USUARIO';\nexport const LOGIN_EXITOSO = 'LOGIN_EXITOSO';\nexport const LOGIN_ERROR = 'LOGIN_ERROR';\nexport const CERRAR_SESION = 'CERRAR_SESION';\n","import {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    PROYECTO_ERROR\n} from '../../types';\n\n\nexport default (state, action) => {\n    switch (action.type) {\n        case FORMULARIO_PROYECTO:\n            return {\n                ...state,\n                formulario: true\n            }\n        case OBTENER_PROYECTOS:\n            return {\n                ...state,\n                proyectos: action.payload\n            }\n        case AGREGAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: [action.payload, ...state.proyectos],\n                formulario: false,\n                errorformulario: false\n            }\n        case VALIDAR_FORMULARIO:\n            return {\n                ...state,\n                errorformulario: true\n            }\n        case PROYECTO_ACTUAL:\n            return {\n                ...state,\n                proyecto: state.proyectos.filter(proyecto => proyecto._id === action.payload)\n            }\n        case ELIMINAR_PROYECTO:\n            return {\n                ...state,\n                proyectos: state.proyectos.filter(proyecto => proyecto._id !== action.payload),\n                proyecto: null\n            }\n        case PROYECTO_ERROR:\n            return {\n                ...state,\n                mensaje: action.payload\n            }\n        default:\n            return state;\n    }\n}","import axios from 'axios';\n\nconst clienteAxios = axios.create({\n    baseURL: process.env.REACT_APP_BACKEND_URL\n});\n\nexport default clienteAxios;","import React, { useReducer } from 'react';\nimport proyectoReducer from './proyectoReducer';\nimport proyectoContext from './proyectoContext';\nimport {\n    FORMULARIO_PROYECTO,\n    OBTENER_PROYECTOS,\n    AGREGAR_PROYECTO,\n    VALIDAR_FORMULARIO,\n    PROYECTO_ACTUAL,\n    ELIMINAR_PROYECTO,\n    PROYECTO_ERROR\n} from '../../types/';\nimport clienteAxios from '../../config/axios';\n\nconst ProyectoState = props => {\n\n    const initialState = {\n        proyectos : [],\n        formulario: false,\n        errorformulario: false,\n        proyecto: null,\n        mensaje: null\n    }\n\n    // Dispatch para ejecutar las acciones\n    const [state, dispatch] = useReducer(proyectoReducer, initialState);\n    // serie de funciones para el CRUD\n\n    const mostrarFormulario = () => {\n        dispatch({\n            type: FORMULARIO_PROYECTO\n        });\n    };\n\n    // Obtener los proyectos\n    const obtenerProyectos = async () => {\n        try {\n            const resultado = await clienteAxios.get('/api/proyectos');\n            dispatch({\n                type: OBTENER_PROYECTOS,\n                payload: resultado.data.proyectos\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'categoria-err'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            });\n        }\n    };\n\n    // Agregar nuevo proyecto\n    const agregarProyecto = async proyecto => {\n        \n        try {\n            const resultado = await clienteAxios.post('/api/proyectos', proyecto);\n            dispatch({\n                type: AGREGAR_PROYECTO,\n                payload: resultado.data\n            })\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'categoria-err'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            });\n        }\n    }\n\n    // mostrar error\n    const mostrarError = () => {\n        dispatch({\n            type: VALIDAR_FORMULARIO\n        });\n    }\n\n    // mostrar proyecto seleccionado por usuario\n    const proyectoActual = proyectoId => {\n        dispatch({\n            type: PROYECTO_ACTUAL,\n            payload : proyectoId\n        });\n    }\n\n    // elimina proyecto\n    const eliminarProyecto = async proyectoId => {\n        try {\n            await clienteAxios.delete(`/api/proyectos/${proyectoId}`);\n            dispatch({\n                type: ELIMINAR_PROYECTO,\n                payload : proyectoId\n            });\n        } catch (error) {\n            const alerta = {\n                msg: 'Hubo un error',\n                categoria: 'categoria-err'\n            }\n            dispatch({\n                type: PROYECTO_ERROR,\n                payload: alerta\n            });\n        }\n    }\n\n    return (\n        <proyectoContext.Provider\n            value={{\n                proyectos: state.proyectos,\n                formulario: state.formulario,\n                errorformulario: state.errorformulario,\n                proyecto: state.proyecto, \n                mensaje: state.mensaje,\n                mostrarFormulario,\n                obtenerProyectos,\n                agregarProyecto,\n                mostrarError,\n                proyectoActual,\n                eliminarProyecto\n            }}\n        >\n            {props.children}\n        </proyectoContext.Provider>\n    )\n}\n\nexport default ProyectoState;","import { \n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nexport default (state, action) => {\n    switch(action.type) {\n        case TAREAS_PROYECTO:\n            return {\n                ...state,\n                tareasproyecto: action.payload\n            }\n        case AGREGAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: [action.payload, ...state.tareasproyecto],\n                errortarea: false\n            }\n        case VALIDAR_TAREA:\n            return {\n                ...state,\n                errortarea: true\n            }\n        case ELIMINAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.filter(tarea => tarea._id !== action.payload )\n            }\n        case ACTUALIZAR_TAREA:\n            return {\n                ...state,\n                tareasproyecto: state.tareasproyecto.map(tarea => tarea._id === action.payload._id ? action.payload : tarea )\n            }\n        case TAREA_ACTUAL:\n            return {\n                ...state,\n                tareaseleccionada: action.payload\n            }\n        case LIMPIAR_TAREA:\n            return {\n                ...state,\n                tareaseleccionada: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport TareaContext from './tareaContext';\nimport TareaReducer from './tareaReducer';\n\nimport { \n    TAREAS_PROYECTO,\n    AGREGAR_TAREA,\n    VALIDAR_TAREA,\n    ELIMINAR_TAREA,\n    TAREA_ACTUAL,\n    ACTUALIZAR_TAREA,\n    LIMPIAR_TAREA\n} from '../../types';\n\nimport clienteAxios from '../../config/axios';\n\nconst TareaState = props => {\n    const initialState = {\n        tareasproyecto: [],\n        errortarea: false,\n        tareaseleccionada: null\n    }\n\n    // Crear dispatch y state\n    const [state, dispatch] = useReducer(TareaReducer, initialState);\n\n    // Crear las funciones\n\n    // Obtener las tareas de un proyecto\n    const obtenerTareas = async proyecto => {\n\n        console.log(proyecto);\n\n        try {\n            const resultado = await clienteAxios.get('/api/tarea/', { params: { proyecto }});\n            console.log(resultado);\n            dispatch({\n                type: TAREAS_PROYECTO,\n                payload: resultado.data.tareas\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Agregar una tarea al proyecto seleccionado\n    const agregarTarea = async tarea => {\n        console.log(tarea);\n        try {\n            const resultado = await clienteAxios.post('/api/tarea', tarea);\n            console.log(resultado);\n            dispatch({\n                type: AGREGAR_TAREA,\n                payload: tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Valida y muestra un error en caso de que sea necesario\n    const validarTarea = () => {\n        dispatch({\n            type: VALIDAR_TAREA\n        })\n    }\n\n    // Eliminar tarea por id\n    const eliminarTarea = async (id, proyecto) => {\n        try {\n            await clienteAxios.delete(`/api/tarea/${id}`, { params: { proyecto }});\n            dispatch({\n                type: ELIMINAR_TAREA,\n                payload: id\n            })\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    // Edita o modifica una tarea\n    const actualizarTarea = async tarea => {\n\n        try {\n            const resultado = await clienteAxios.put(`/api/tarea/${tarea._id}`, tarea);\n            \n            dispatch({\n                type: ACTUALIZAR_TAREA,\n                payload: resultado.data.tarea\n            })\n        } catch (error) {\n            console.log(error);\n        }\n    }\n\n    // Extrae una tarea para edición\n    const guardarTareaActual = tarea => {\n        dispatch({\n            type: TAREA_ACTUAL,\n            payload: tarea\n        })\n    }\n\n\n\n    // Elimina la tareaseleccionada\n    const limpiarTarea = () => {\n        dispatch({\n            type: LIMPIAR_TAREA\n        })\n    }\n\n    return (\n        <TareaContext.Provider\n            value={{\n                tareasproyecto : state.tareasproyecto,\n                errortarea: state.errortarea,\n                tareaseleccionada: state.tareaseleccionada,\n                obtenerTareas,\n                agregarTarea,\n                validarTarea,\n                eliminarTarea,\n                guardarTareaActual,\n                actualizarTarea,\n                limpiarTarea\n            }}\n        >\n            {props.children}\n        </TareaContext.Provider>\n    )\n}\n\nexport default TareaState;","import { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types/index';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case MOSTRAR_ALERTA:\n            return {\n                alerta: action.payload\n            }\n        case OCULTAR_ALERTA:\n            return {\n                alerta: null\n            }\n        default:\n            return state;\n    }\n}","import React, { useReducer } from 'react';\nimport alertaReducer from './alertaReducer';\nimport alertaConext from './alertaContext';\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA } from '../../types/index';\n\nconst AlertaState = props => {\n    const initialState = {\n        alerta: null\n    }\n\n    const [state, dispatch] = useReducer(alertaReducer, initialState);\n\n    // funciones \n    const mostrarAlerta = (msg, categoria) => {\n        dispatch({\n            type: MOSTRAR_ALERTA,\n            payload: {\n                msg,\n                categoria\n            }\n        });\n\n        setTimeout(() => {\n            dispatch({\n                type: OCULTAR_ALERTA\n            })\n        }, 5000);\n    }\n\n    return (\n        <alertaConext.Provider\n            value={{\n                alerta: state.alerta,\n                mostrarAlerta,\n                info:''\n            }}\n        >\n            {props.children}\n        </alertaConext.Provider>\n    )\n}\n\nexport default AlertaState;","import { REGISTRO_EXITOSO,\nREGISTRO_ERROR, OBTENER_USUARIO, LOGIN_EXITOSO, LOGIN_ERROR, CERRAR_SESION} from '../../types/index';\n\nexport default (state, action) => {\n    switch (action.type) {\n        case REGISTRO_EXITOSO:\n        case LOGIN_EXITOSO:\n            localStorage.setItem('token', action.payload.token);\n            return {\n                ...state,\n                autenticado: true,\n                mensaje: null,\n                cargando: false\n            }\n        case CERRAR_SESION:\n        case LOGIN_ERROR:\n        case REGISTRO_ERROR:\n            localStorage.removeItem('token');\n            return {\n                ...state,\n                token: null,\n                usuario: null,\n                autenticado: null,\n                mensaje: action.payload,\n                cargando: false\n            }\n        case OBTENER_USUARIO:\n            return {\n                ...state,\n                usuario: action.payload,\n                autenticado: true,\n                cargando: false\n            }\n        default:\n            return state;\n    }\n}","\nimport clienteAxios from './axios';\n\nconst tokenAuth = token => {\n    if (token) {\n        clienteAxios.defaults.headers.common['x-auth-token'] = token;\n    } else {\n        delete clienteAxios.defaults.headers.common['x-auth-token'];\n    }\n}\n\nexport default tokenAuth;\n","import React, { useReducer } from 'react';\nimport authReducer from './authReducer';\nimport authContext from './authContext';\nimport tokenAuth from '../../config/tokenAuth';\nimport { REGISTRO_EXITOSO,\nREGISTRO_ERROR,\nOBTENER_USUARIO,\nLOGIN_EXITOSO,\nLOGIN_ERROR,\n    CERRAR_SESION\n} from '../../types/index';\nimport clienteAxios from '../../config/axios';\n\nconst AuthState = props => {\n    const initialState = {\n        token: localStorage.getItem('token'),\n        autenticado: null,\n        usuario: null,\n        mensaje: null,\n        cargando: true\n    }\n\n    const [state, dispatch] = useReducer(authReducer, initialState);\n\n    const registrarUsuario = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/usuarios/', datos);\n            dispatch({\n                type: REGISTRO_EXITOSO,\n                payload: respuesta.data\n            });\n\n            usuarioAutenticado();\n        } catch (error) {\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-err'\n            }\n            dispatch({\n                type: REGISTRO_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    // retorna el usuario autenticado\n    const usuarioAutenticado = async () => {\n        const token = localStorage.getItem('token');\n        if (token) {\n            // TODO: funcion para enviar el token por headers\n            tokenAuth(token);\n        }\n\n        try {\n            const respuesta = await clienteAxios.get('/api/auth');\n            // console.log(respuesta);\n            dispatch({\n                type: OBTENER_USUARIO,\n                payload: respuesta.data.usuario\n            })\n        } catch (error) {\n            console.log(error);\n            dispatch({\n                type: LOGIN_ERROR\n            })\n        }\n    }\n\n    // cuando el usuario inicia sesion\n    const iniciarSession = async datos => {\n        try {\n            const respuesta = await clienteAxios.post('/api/auth', datos);\n            dispatch({\n                type: LOGIN_EXITOSO,\n                payload: respuesta.data\n            });\n            usuarioAutenticado();\n        } catch (error) {\n            const alerta = {\n                msg: error.response.data.msg,\n                categoria: 'alerta-err'\n            }\n            dispatch({\n                type: LOGIN_ERROR,\n                payload: alerta\n            })\n        }\n    }\n\n    const cerrarSesion = () => {\n        dispatch({\n            type: CERRAR_SESION\n        })\n    }\n\n    return (\n        <authContext.Provider\n            value={{\n                token: state.token,\n                autenticado: state.autenticado,\n                usuario: state.usuario,\n                mensaje: state.mensaje,\n                cargando: state.cargando,\n                registrarUsuario,\n                iniciarSession,\n                usuarioAutenticado,\n                cerrarSesion\n            }}\n        >\n            {props.children}\n        </authContext.Provider>\n    )\n}\n\nexport default AuthState;","import React, { useContext, useEffect } from 'react';\nimport { Route, Redirect } from 'react-router-dom';\nimport authConext from '../../context/autenticacion/authContext';\nimport AuthContext from '../../context/autenticacion/authContext';\n\nconst RutaPrivada = ({ component: Component, ...props }) => {\n    \n    const authContext = useContext(AuthContext);\n    const { autenticado, cargando, usuarioAutenticado } = authContext;\n\n    useEffect(() => {\n        usuarioAutenticado();\n    }, []);\n\n    return (\n        <Route\n            {...props} render={props => !autenticado && !cargando ? (\n                <Redirect to='/'/>\n            ): (\n                <Component {...props} />\n            ) }\n        />\n    )\n}\n\nexport default RutaPrivada\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Login from './components/auth/Login';\nimport NuevaCuenta from './components/auth/NuevaCuenta';\nimport Proyectos from './components/proyectos/Proyectos';\nimport ProyectoState from './context/proyectos/proyectoState';\nimport TareaState from './context/tareas/tareaState';\nimport AlertaState from './context/alertas/alertaState';\nimport AuthState from './context/autenticacion/authState';\nimport tokenAuth from './config/tokenAuth';\nimport RutaPrivada from './components/rutas/RutaPrivada';\n\n// revisar si hay token\nconst token = localStorage.getItem('token');\nif (token) {\n\ttokenAuth(token);\n}\n\nfunction App() {\n\n\tconsole.log(process.env.REACT_APP_BACKEND_URL)\n\n\treturn (\n\t\t<ProyectoState>\n\t\t\t<TareaState>\n\t\t\t\t<AlertaState>\n\t\t\t\t\t<AuthState>\n\t\t\t\t\t\t<Router>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<Route exact path=\"/\" component={Login} />\n\t\t\t\t\t\t\t\t<Route exact path=\"/nueva-cuenta\" component={NuevaCuenta} />\n\t\t\t\t\t\t\t\t<RutaPrivada exact path=\"/proyectos\" component={Proyectos} />\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</Router>\n\t\t\t\t\t</AuthState>\n\t\t\t\t</AlertaState>\n\t\t\t</TareaState>\n\t\t</ProyectoState>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}